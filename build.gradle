buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.2.RELEASE')
    }
}

plugins {
	id 'net.ltgt.apt' version '0.10'
	id "org.springframework.boot" version "2.1.2.RELEASE"
}

apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

springBoot {
	mainClassName = 'de.calltopower.simpletodo.STDApplication'
}


if (!hasProperty('mainClass')) {
    ext.mainClass = 'de.calltopower.simpletodo.STDApplication'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations.all {
	exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	exclude group: 'commons-logging', module: 'commons-logging'
	resolutionStrategy {
        force 'com.google.guava:guava:14.0.1'
        force 'log4j:log4j:1.2.17'
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web:2.1.4.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-jpa:2.1.4.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-log4j2:2.1.4.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-security:2.1.4.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-cache:2.1.4.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-mail:2.1.4.RELEASE')
    // compile('jakarta.xml.bind:jakarta.xml.bind-api:2.3.2')
    compile('javax.cache:cache-api:1.1.0')
    compile('org.hibernate:hibernate-jcache:5.4.21.Final')
    compile('org.ehcache:ehcache:3.9.0')
    compile('io.jsonwebtoken:jjwt:0.9.1')
    compile('org.apache.httpcomponents:httpclient:4.5.3')
    compile('com.google.code.gson:gson:2.8.5')
	// compile('mysql:mysql-connector-java:8.0.15')
    compile('org.mariadb.jdbc:mariadb-java-client:2.4.0')
    // compile('com.ibm.db2:db2jcc4:4.22.37')
	compile('org.apache.commons:commons-lang3:3.1')
	compile('com.google.guava:guava:14.0.1')
	
    testCompile('org.springframework.boot:spring-boot-starter-test:2.1.4.RELEASE')
    testCompile('com.h2database:h2:1.4.199')

	compileOnly 'org.projectlombok:lombok:1.18.4'
	annotationProcessor 'org.projectlombok:lombok:1.18.4'
}

configurations.compile {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

bootJar {
    baseName = 'ctp-simpletodoserver'
    version =  '0.00-00-SNAPSHOT'
    mainClassName = 'de.calltopower.simpletodo.STDApplication'

    manifest {
        attributes 'Start-Class': 'de.calltopower.simpletodo.STDApplication'
    }
}

test {
    exclude '**/All*Tests.class'
    if (!project.hasProperty('runIntTest')) {
       exclude '**/*IntTest.class'
    }
}

task zip(type: Zip, dependsOn: 'bootJar') {
   from '.'
   include 'src/main/resources/application.properties'
   include 'README.md'
   include 'scripts/*'
   include 'build/libs/*'
   archiveName 'simpletodo-server-1.1.0.zip'
   
    // Flatten the hierarchy by setting the path
    // of all files to their respective basename
    eachFile {
      path = name
    }

    // Flattening the hierarchy leaves empty directories,
    // do not copy those
    includeEmptyDirs = false
}
